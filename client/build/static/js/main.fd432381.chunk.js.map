{"version":3,"sources":["Card.js","settings.js","client-utils.js","Board.js","ActiveBoard.js","NewBoard.js","App.js","serviceWorker.js","index.js","images/delete.svg","images/edit.svg","images/retro-logo@2x.png"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delete","bind","assertThisInitialized","editItem","likeItem","data","CardId","Cardtype","CardBody","Likes","window","confirm","react_default","a","createElement","className","tabIndex","aria-label","alt","onClick","src","trashIcon","editIcon","React","Component","settings","client_utils","getURLParam","oTarget","sVar","decodeURI","search","replace","RegExp","encodeURI","Board","state","boardData","cardData","formState","title","editing","addWentWell","addWentBadly","addActionItem","saveChanges","deleteCard","refreshData","self","boardId","clientUtils","location","fetch","method","mode","headers","Content-Type","Accept","body","JSON","stringify","then","response","json","setState","boardInfo","cardInfo","cardType","id","cardId","cardBody","likes","document","getElementById","value","$","modal","newObj","msg","serverUrl","alert","likeCount","sendMessage","setInterval","on","trigger","wentWellRows","wentBadlyRows","actionItemsRows","x","length","push","src_Card","key","boardTitle","BoardTitle","type","data-toggle","data-target","role","data-dismiss","aria-hidden","cols","rows","ActiveBoard","deleteBoard","BoardId","Date","CreatedTime","toString","toLocaleString","href","openBoardUrl","trash","formatDate","exportBoardUrl","class","NewBoard","boardUrl","allBoards","temp","localStorage","getItem","localIds","parse","getActiveBoards","activeBoards","src_ActiveBoard","App","createBoard","newTitle","boardState","src_NewBoard","src_Board","logo","placeholder","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fd432381.chunk.js","sourcesContent":["import React from 'react';\nimport 'font-awesome/css/font-awesome.css';\nimport trashIcon from './images/delete.svg';\nimport editIcon from './images/edit.svg';\n\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.delete = this.delete.bind(this);\n        this.editItem = this.editItem.bind(this);\n        this.likeItem = this.likeItem.bind(this);\n    }\n\n    likeItem() {\n        this.props.likeItem(this.props.data.CardId);\n    }\n    editItem() {\n        this.props.editItem(this.props.Cardtype, this.props.data.CardId, this.props.data.CardBody, this.props.data.Likes);\n    }\n\n    delete() {\n        if (window.confirm(\"Delete this card?\")) {\n            this.props.delete(this.props.Cardtype, this.props.data.CardId);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-12\">\n                <div className=\"board__card\">\n                    <div className=\"card__body\">\n                        <div className=\"card__text\">\n                            <p tabIndex=\"0\" aria-label={this.props.data.CardBody}>{this.props.data.CardBody}</p>\n                        </div>\n                        <div className=\"card__delete\">\n                            <button className=\"reset-button-style card__delete--btn\" alt=\"delete\" aria-label=\"Delete card\" onClick={this.delete} >\n                                <img src={trashIcon} />\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"card__footer\">\n                        <div className=\"row\">\n                            <div className=\"col-6 card__footer--heart\">\n                                <button className=\"reset-button-style card__footer--img mx-auto d-block\" onClick={this.likeItem} aria-label=\"Like card\" alt=\"Like card\"><span className=\"fa fa-heart\"></span><span className=\"card__like-count\">{'+' + this.props.data.Likes}</span></button>\n                            </div>\n                            <div className=\"col-6\">\n                                <button className=\"reset-button-style mx-auto d-block\" onClick={this.editItem} aria-label=\"Edit card\" alt=\"edit card\" >\n                                    <img className=\"card__footer--img\" src={editIcon} />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","export default {\n    //myIPAddress: '10.226.0.102',\n    myIPAddress: 'localhost',\n    baseUrl: 'http://',\n    serverPort: ':8080',\n    routeAddCard: '/api/createcard',\n    routeEditCard: '/api/editcard',\n    routeDeleteCard: '/api/deletecard',\n    routeGetAllBoards: '/api/getallboards',\n    routeGetBoardById: '/api/getboardbyid',\n    routeCreateBoard: '/api/createboard',\n    routeDeleteBoard: '/api/deleteboard',\n    routeLikeCard: '/api/likecard',\n    routeExportBoard: '/api/exportboard',\n    frontEndPort: ':3000',\n    boardRefreshTime: 30000\n}\n","function getURLParam(oTarget, sVar) { \n    //from https://developer.mozilla.org/en-US/docs/Web/API/URLUtils/search \n    return decodeURI(oTarget.search.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURI(sVar).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\")); \n} \n\nexport default {\n    getURLParam: getURLParam\n}\n","import React from 'react';\nimport Card from './Card';\nimport $ from 'jquery';\nimport settings from './settings';\nimport clientUtils from './client-utils';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            boardData: [],\n            cardData: [],\n            formState: { title: 'Modal Title', state: 'none' },\n            editing: {\n                state: false\n            }\n        };\n\n        this.addWentWell = this.addWentWell.bind(this);\n        this.addWentBadly = this.addWentBadly.bind(this);\n        this.addActionItem = this.addActionItem.bind(this);\n        this.saveChanges = this.saveChanges.bind(this);\n        this.deleteCard = this.deleteCard.bind(this);\n        this.refreshData = this.refreshData.bind(this);\n        this.editItem = this.editItem.bind(this);\n        this.likeItem = this.likeItem.bind(this);\n    }\n\n    refreshData() {\n        var self = this;\n        //doesn't work with IE11 or Edge\n        //let params = (new URL(document.location)).searchParams;\n        //let boardId = params.get(\"boardId\");\n        let boardId = clientUtils.getURLParam(window.location, 'boardId');\n\n        fetch(settings.routeGetBoardById, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({ boardId: boardId })\n        }).then(response => response.json())\n            .then((data) => {\n                self.setState({\n                    boardData: data.boardInfo,\n                    cardData: data.cardInfo,\n                });\n            });\n    }\n\n    deleteCard(cardType, id) {\n        var self = this;\n        let boardId = clientUtils.getURLParam(window.location, 'boardId');\n\n        fetch(settings.routeDeleteCard, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(\n                {\n                    boardId: boardId,\n                    cardType: cardType,\n                    cardId: id,\n                    method: \"delete\"\n                }\n            )\n        }).then(response => response.json())\n            .then((data) => {\n                self.setState({\n                    cardData: data.cardInfo\n                });\n            });\n    }\n\n    addWentWell() {\n        this.setState({ formState: { title: 'The Good', state: 'wentwell' } });\n    }\n    addWentBadly() {\n        this.setState({ formState: { title: 'The Bad', state: 'wentbadly' } });\n    }\n    addActionItem() {\n        this.setState({ formState: { title: 'Action Item', state: 'actionitem' } });\n    }\n\n    editItem(cardType, cardId, cardBody, likes) {\n        this.setState(\n            {\n                editing:\n                {\n                    state: true,\n                    cardType: cardType,\n                    cardId: cardId,\n                    likes: likes\n                }\n            }\n        );\n        //open modal\n        document.getElementById('newBody').value = cardBody;\n        $('#wentWellModal').modal();\n    }\n\n    likeItem(cardId) {\n        var self = this;\n        let boardId = clientUtils.getURLParam(window.location, 'boardId');\n\n        let newObj = {\n            boardId: boardId,\n            cardId: cardId,\n        };\n\n        fetch(settings.routeLikeCard, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(newObj)\n        })\n        .then(response => response.json())\n        .then((data) => {\n            self.setState({\n                cardData: data.cardInfo\n            });\n        });\n    }\n\n    sendMessage(msg) {\n        msg.boardId = clientUtils.getURLParam(window.location, 'boardId');\n        var self = this;\n        var serverUrl = '';\n        if (msg.method === 'add') {\n            serverUrl = settings.routeAddCard;\n        }\n        else if (msg.method === 'edit') {\n            serverUrl = settings.routeEditCard;\n        }\n        else {\n            alert('Error: unknown message type!');\n            return;\n        }\n\n        return fetch(serverUrl, {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(msg)\n        }).then(response => response.json())\n            .then((data) => {\n                self.setState({\n                    cardData: data.cardInfo\n                });\n\n                document.getElementById('newBody').value = '';\n                $('#wentWellModal').modal('hide');\n            });\n    }\n\n    saveChanges() {\n        let boardId = clientUtils.getURLParam(window.location, 'boardId');\n        var method = 'add';\n        var cardId = null;\n        var cardType = this.state.formState.state;\n        var likeCount = 0;\n        if (this.state.editing.state === true) {\n            method = 'edit';\n            cardId = this.state.editing.cardId;\n            cardType = this.state.editing.cardType;\n            likeCount = this.state.editing.likes;\n            this.setState({ editing: { state: false } });\n        }\n\n        let newObj = {\n            method: method,\n            boardId: boardId,\n            cardType: cardType,\n            cardId: cardId,\n            cardBody: document.getElementById('newBody').value,\n            likes: likeCount\n        };\n\n        this.sendMessage(newObj);\n    }\n\n    componentDidMount() {\n        this.refreshData();\n        var self = this;\n\n        setInterval(function () {\n            self.refreshData();\n        }, settings.boardRefreshTime);\n\n        $('#wentWellModal').on('shown.bs.modal', function () {\n            $('#newBody').trigger('focus')\n        });\n    }\n\n    render() {\n        var wentWellRows = [];\n        var wentBadlyRows = [];\n        var actionItemsRows = [];\n\n        for (var x = 0; x < this.state.cardData.length; x++) {\n            if (this.state.cardData[x].Cardtype === 'wentwell') {\n                wentWellRows.push(<Card key={x} data={this.state.cardData[x]} cardType='wentwell' delete={this.deleteCard} editItem={this.editItem} likeItem={this.likeItem} />);\n            }\n            else if (this.state.cardData[x].Cardtype === 'wentbadly') {\n                wentBadlyRows.push(<Card key={x} data={this.state.cardData[x]} cardType='wentwell' delete={this.deleteCard} editItem={this.editItem} likeItem={this.likeItem} />);\n            }\n            else if (this.state.cardData[x].Cardtype === 'actionitem') {\n                actionItemsRows.push(<Card key={x} data={this.state.cardData[x]} cardType='wentwell' delete={this.deleteCard} editItem={this.editItem} likeItem={this.likeItem} />);\n            }\n        }\n\n        var boardTitle = '';\n        if (this.state.boardData.length > 0) {\n            boardTitle = this.state.boardData[0].BoardTitle; //since it's a SELECT statement it comes back as an array\n        }\n\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"page__title\">\n                            <h2>\n                                {boardTitle}\n                                <button type=\"button\" className=\"float-right btn btn-primary btn-refresh\" onClick={this.refreshData}>Refresh Board</button>\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-4 went-well\">\n                        <div className=\"column__title\">\n                            <h3>The Good</h3>\n                            <button className=\"reset-button-style add-btn\" onClick={this.addWentWell} data-toggle=\"modal\" data-target=\"#wentWellModal\" aria-label=\"Add new what went well card\"><span className=\"fa fa-plus-circle\"></span></button>\n                        </div>\n                        <div className=\"row\">\n                            {wentWellRows}\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-4 went-badly\">\n                        <div className=\"column__title\">\n                            <h3>The Bad</h3>\n                            <button className=\"reset-button-style add-btn\" onClick={this.addWentBadly} data-toggle=\"modal\" data-target=\"#wentWellModal\" aria-label=\"Add new what went badly card\"><span className=\"fa fa-plus-circle\"></span></button>\n                        </div>\n                        <div className=\"row\">\n                            {wentBadlyRows}\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-4 action-items\">\n                        <div className=\"column__title\">\n                            <h3>The Action Items</h3>\n                            <button className=\"reset-button-style add-btn\" onClick={this.addActionItem} data-toggle=\"modal\" data-target=\"#wentWellModal\" aria-label=\"Add new action item card\"><span className=\"fa fa-plus-circle\"></span></button>\n                        </div>\n                        <div className=\"row\">\n                            {actionItemsRows}\n                        </div>\n                    </div>\n                </div>\n                <div id=\"wentWellModal\" className=\"modal\" tabIndex=\"-1\" role=\"dialog\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">{this.state.formState.title}</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"row\">\n                                    <label className=\"col-3\">Content</label>\n                                    <textarea cols=\"40\" rows=\"6\" id=\"newBody\" />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveChanges}>Save</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Board;","import React from 'react';\nimport trash from './images/delete.svg';\nimport 'font-awesome/css/font-awesome.css';\n\nclass ActiveBoard extends React.Component {\n    constructor() {\n        super();\n\n        this.deleteBoard = this.deleteBoard.bind(this);\n    }\n\n    deleteBoard() {\n        this.props.deleteBoard(this.props.boardData.BoardId);\n    }\n    formatDate() {\n        //HAHAHAHA Sqlite3 Current_timestamp is in GMT and dates in JS are stupid\n        // I could probably just include moment.js or something and make this cleaner\n        var temp = new Date(new Date(this.props.boardData.CreatedTime).toString() + ' UTC');\n        return temp.toLocaleString();\n    }\n\n    render() {\n        return (\n            <div className=\"col-12 col-sm-4 col-md-3\">\n                <div className=\"active-board\">\n                    <div className=\"active-board__body\">\n                            <div className=\"active-board__title\">\n                                <a href={this.props.openBoardUrl + this.props.boardData.BoardId}>\n                                    {this.props.boardData.BoardTitle}\n                                </a>\n                            </div>\n                            <div className=\"active-board__delete-btn\">\n                                <img className=\"active-board__delete-icon\" src={trash} alt=\"delete\" aria-label={\"Delete board \" + this.props.boardData.BoardTitle} onClick={this.deleteBoard} />\n                            </div>\n\n                        <p className=\"board__date\"><span className=\"board__date-icon fa fa-calendar\"></span>{this.formatDate()}</p>\n\n                    </div>\n                    <div className=\"active-board__footer\">\n                        <a href={this.props.exportBoardUrl + '/' + this.props.boardData.BoardId} aria-label=\"Export Board\">\n                            <span class=\"fa fa-download active-board__export-btn\"></span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ActiveBoard;","import React from 'react';\nimport settings from './settings';\nimport ActiveBoard from './ActiveBoard';\n\nclass NewBoard extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            boardUrl: '',\n            allBoards: []\n        };\n\n        this.deleteBoard = this.deleteBoard.bind(this);\n    }\n\n    deleteBoard(id) {\n        if (window.confirm('Delete this board?') === true) {\n            var self = this;\n\n            fetch(settings.routeDeleteBoard, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify({ boardId: id })\n            }).then(response => response.json())\n            .then((data) => {\n                self.setState({\n                    allBoards: data\n                });\n            });\n        }\n    }\n\n    getLocalBoards() {\n        var self = this;\n        var temp = localStorage.getItem('BoardIds');\n        if (temp != null) {\n            var localIds = JSON.parse(temp);\n\n            fetch(settings.routeGetAllBoards, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify(localIds)\n            }).then(response => response.json())\n            .then((data) => {\n                self.setState({\n                    allBoards: data\n                });\n            });\n        }\n    }\n\n    getActiveBoards() {\n        var self = this;\n\n        fetch(settings.routeGetAllBoards, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }).then(response => response.json())\n            .then((data) => {\n                self.setState({\n                    allBoards: data\n                });\n            });\n    }\n\n    componentDidMount() {\n        this.getActiveBoards();\n    }\n\n    render() {\n        var link = '';\n        if (this.state.boardUrl !== '') {\n            link = <a href={this.state.boardUrl}>Open new board</a>\n        }\n\n        var activeBoards = [];\n        for (var x = 0; x < this.state.allBoards.length; x++) {\n            activeBoards.push(<ActiveBoard key={x} boardData={this.state.allBoards[x]} openBoardUrl={'/?boardId='} deleteBoard={this.deleteBoard} exportBoardUrl={settings.routeExportBoard} />);\n        }\n\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"page__title align-bottom\">\n                            <h2>Active Boards</h2>\n                        </div>\n                        <div className=\"row\">\n                            {activeBoards}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewBoard;","import React, { Component } from 'react';\nimport 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Board from './Board';\nimport NewBoard from './NewBoard';\nimport settings from './settings';\nimport logo from './images/retro-logo@2x.png';\nimport clientUtils from './client-utils';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.createBoard = this.createBoard.bind(this);\n  }\n\n  createBoard() {\n    var newTitle = document.getElementById('newBoardTitle').value;\n\n    if (newTitle == \"\") {\n      alert(\"Title is required.\");\n      return;\n    }\n\n    fetch(settings.routeCreateBoard, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify({ boardTitle: newTitle })\n    }).then(response => response.json())\n    .then((data) => {\n      let boardUrl = '/?boardId=' + data.boardId;\n      window.location = boardUrl;\n    });\n  }\n\n  render() {\n    //set boardId from query string if it exists\n    let boardId = clientUtils.getURLParam(window.location, \"boardId\");\n    \n    var boardState = <NewBoard />;\n    if (boardId !== \"\") {\n      boardState = <Board />;\n    }\n\n    return (\n      <div className=\"App container-fluid\">\n        <header className=\"App-header\">\n          <div className=\"row\">\n            <div className=\"col-12 header__logo\">\n              <div className=\"header__logo--center\">\n                <a href=\"/\"><img className=\"header__logo-image\" src={logo} alt=\"logo\" /></a>\n              </div>\n            </div>\n          </div>        \n          <div className=\"row create-new-board\">\n              <div className=\"col-5\">\n                  <h2 className=\"new-board__title new-board__center\">Create New Board</h2>\n              </div>\n              <div className=\"col-5\">\n                  <input type=\"text\" className=\"form-control new-board__center\" id=\"newBoardTitle\" placeholder=\"Board title\" aria-label=\"Board title\" />\n              </div>\n              <div className=\"col-2\">\n                  <button className=\"btn btn-primary btn-create-board new-board__center\" onClick={this.createBoard} aria-label=\"Create board\">Create New Board</button>\n              </div>\n          </div>\n\n        </header>\n        <main className=\"main-content\">\n          {boardState}\n        </main>\n        <footer>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"footer\">\n                Copyright © 2019 IP Sprint 14.6 Hackathon. All Rights Reserved.\n              </div>\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './polyfills';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/delete.d2595acc.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.5262c690.svg\";","module.exports = __webpack_public_path__ + \"static/media/retro-logo@2x.b6436ee6.png\";"],"sourceRoot":""}