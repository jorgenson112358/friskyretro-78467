{"version":3,"sources":["Card.js","settings.js","client-utils.js","Board.js","ActiveBoard.js","NewBoard.js","App.js","serviceWorker.js","index.js","images/delete.svg","images/edit.svg","images/retro-logo@2x.png"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delete","bind","assertThisInitialized","editItem","likeItem","data","CardId","Cardtype","CardBody","Likes","window","confirm","react_default","a","createElement","className","tabIndex","aria-label","alt","onClick","src","trashIcon","editIcon","React","Component","settings","client_utils","getURLParam","oTarget","sVar","decodeURI","search","replace","RegExp","encodeURI","Board","state","boardData","cardData","formState","title","editing","refreshCount","intervalId","addWentWell","addWentBadly","addActionItem","saveChanges","deleteCard","refreshData","getAutoRefreshStatus","refreshTimer","self","boardId","clientUtils","location","fetch","method","mode","headers","Content-Type","Accept","body","JSON","stringify","then","response","json","setState","boardInfo","cardInfo","cardType","id","cardId","cardBody","likes","document","getElementById","value","$","modal","newObj","msg","serverUrl","alert","likeCount","sendMessage","console","log","clearInterval","prevState","setInterval","on","trigger","wentWellRows","wentBadlyRows","actionItemsRows","x","length","push","src_Card","key","boardTitle","BoardTitle","type","data-toggle","data-target","role","data-dismiss","aria-hidden","cols","rows","ActiveBoard","deleteBoard","BoardId","Date","CreatedTime","toString","toLocaleString","href","openBoardUrl","trash","formatDate","exportBoardUrl","class","NewBoard","boardUrl","allBoards","temp","localStorage","getItem","localIds","parse","getActiveBoards","activeBoards","src_ActiveBoard","App","createBoard","newTitle","boardState","src_NewBoard","src_Board","logo","placeholder","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5353bf9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport trashIcon from './images/delete.svg';\r\nimport editIcon from './images/edit.svg';\r\n\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.delete = this.delete.bind(this);\r\n        this.editItem = this.editItem.bind(this);\r\n        this.likeItem = this.likeItem.bind(this);\r\n    }\r\n\r\n    likeItem() {\r\n        this.props.likeItem(this.props.data.CardId);\r\n    }\r\n    editItem() {\r\n        this.props.editItem(this.props.Cardtype, this.props.data.CardId, this.props.data.CardBody, this.props.data.Likes);\r\n    }\r\n\r\n    delete() {\r\n        if (window.confirm(\"Delete this card?\")) {\r\n            this.props.delete(this.props.Cardtype, this.props.data.CardId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <div className=\"board__card\">\r\n                    <div className=\"card__body\">\r\n                        <div className=\"card__text\">\r\n                            <p tabIndex=\"0\" aria-label={this.props.data.CardBody}>{this.props.data.CardBody}</p>\r\n                        </div>\r\n                        <div className=\"card__delete\">\r\n                            <button className=\"reset-button-style card__delete--btn\" alt=\"delete\" aria-label=\"Delete card\" onClick={this.delete} >\r\n                                <img src={trashIcon} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card__footer\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 card__footer--heart\">\r\n                                <button className=\"reset-button-style card__footer--img mx-auto d-block\" onClick={this.likeItem} aria-label=\"Like card\" alt=\"Like card\"><span className=\"fa fa-heart\"></span><span className=\"card__like-count\">{'+' + this.props.data.Likes}</span></button>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <button className=\"reset-button-style mx-auto d-block\" onClick={this.editItem} aria-label=\"Edit card\" alt=\"edit card\" >\r\n                                    <img className=\"card__footer--img\" src={editIcon} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","export default {\r\n    //myIPAddress: '10.226.0.102',\r\n    myIPAddress: 'localhost',\r\n    baseUrl: 'http://',\r\n    serverPort: ':8080',\r\n    routeAddCard: '/api/createcard',\r\n    routeEditCard: '/api/editcard',\r\n    routeDeleteCard: '/api/deletecard',\r\n    routeGetAllBoards: '/api/getallboards',\r\n    routeGetBoardById: '/api/getboardbyid',\r\n    routeCreateBoard: '/api/createboard',\r\n    routeDeleteBoard: '/api/deleteboard',\r\n    routeLikeCard: '/api/likecard',\r\n    routeExportBoard: '/api/exportboard',\r\n    frontEndPort: ':3000',\r\n    boardRefreshTime: 30000\r\n}\r\n","function getURLParam(oTarget, sVar) { \r\n    //from https://developer.mozilla.org/en-US/docs/Web/API/URLUtils/search \r\n    return decodeURI(oTarget.search.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURI(sVar).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\")); \r\n} \r\n\r\nexport default {\r\n    getURLParam: getURLParam\r\n}\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport $ from 'jquery';\r\nimport settings from './settings';\r\nimport clientUtils from './client-utils';\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            boardData: [],\r\n            cardData: [],\r\n            formState: { title: 'Modal Title', state: 'none' },\r\n            editing: {\r\n                state: false\r\n            },\r\n\t\t\trefreshCount: 10,\r\n\t\t\tintervalId: null\r\n        };\r\n\r\n        this.addWentWell = this.addWentWell.bind(this);\r\n        this.addWentBadly = this.addWentBadly.bind(this);\r\n        this.addActionItem = this.addActionItem.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        this.deleteCard = this.deleteCard.bind(this);\r\n        this.refreshData = this.refreshData.bind(this);\r\n        this.editItem = this.editItem.bind(this);\r\n        this.likeItem = this.likeItem.bind(this);\r\n\t\tthis.getAutoRefreshStatus = this.getAutoRefreshStatus.bind(this);\r\n\t\tthis.refreshTimer = this.refreshTimer.bind(this);\r\n    }\r\n\r\n    refreshData() {\r\n        var self = this;\r\n        //doesn't work with IE11 or Edge\r\n        //let params = (new URL(document.location)).searchParams;\r\n        //let boardId = params.get(\"boardId\");\r\n        let boardId = clientUtils.getURLParam(window.location, 'boardId');\r\n\r\n        fetch(settings.routeGetBoardById, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify({ boardId: boardId })\r\n        }).then(response => response.json())\r\n            .then((data) => {\r\n                self.setState({\r\n                    boardData: data.boardInfo,\r\n                    cardData: data.cardInfo,\r\n                });\r\n            });\r\n    }\r\n\r\n    deleteCard(cardType, id) {\r\n        var self = this;\r\n        let boardId = clientUtils.getURLParam(window.location, 'boardId');\r\n\r\n        fetch(settings.routeDeleteCard, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    boardId: boardId,\r\n                    cardType: cardType,\r\n                    cardId: id,\r\n                    method: \"delete\"\r\n                }\r\n            )\r\n        }).then(response => response.json())\r\n            .then((data) => {\r\n                self.setState({\r\n                    cardData: data.cardInfo\r\n                });\r\n            });\r\n    }\r\n\r\n    addWentWell() {\r\n        this.setState({ formState: { title: 'The Good', state: 'wentwell' } });\r\n    }\r\n    addWentBadly() {\r\n        this.setState({ formState: { title: 'The Bad', state: 'wentbadly' } });\r\n    }\r\n    addActionItem() {\r\n        this.setState({ formState: { title: 'Action Item', state: 'actionitem' } });\r\n    }\r\n\r\n    editItem(cardType, cardId, cardBody, likes) {\r\n        this.setState(\r\n            {\r\n                editing:\r\n                {\r\n                    state: true,\r\n                    cardType: cardType,\r\n                    cardId: cardId,\r\n                    likes: likes\r\n                }\r\n            }\r\n        );\r\n        //open modal\r\n        document.getElementById('newBody').value = cardBody;\r\n        $('#wentWellModal').modal();\r\n    }\r\n\r\n    likeItem(cardId) {\r\n        var self = this;\r\n        let boardId = clientUtils.getURLParam(window.location, 'boardId');\r\n\r\n        let newObj = {\r\n            boardId: boardId,\r\n            cardId: cardId,\r\n        };\r\n\r\n        fetch(settings.routeLikeCard, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(newObj)\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            self.setState({\r\n                cardData: data.cardInfo\r\n            });\r\n        });\r\n    }\r\n\r\n    sendMessage(msg) {\r\n        msg.boardId = clientUtils.getURLParam(window.location, 'boardId');\r\n        var self = this;\r\n        var serverUrl = '';\r\n        if (msg.method === 'add') {\r\n            serverUrl = settings.routeAddCard;\r\n        }\r\n        else if (msg.method === 'edit') {\r\n            serverUrl = settings.routeEditCard;\r\n        }\r\n        else {\r\n            alert('Error: unknown message type!');\r\n            return;\r\n        }\r\n\r\n        return fetch(serverUrl, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(msg)\r\n        }).then(response => response.json())\r\n            .then((data) => {\r\n                self.setState({\r\n                    cardData: data.cardInfo\r\n                });\r\n\r\n                document.getElementById('newBody').value = '';\r\n                $('#wentWellModal').modal('hide');\r\n            });\r\n    }\r\n\r\n    saveChanges() {\r\n        let boardId = clientUtils.getURLParam(window.location, 'boardId');\r\n        var method = 'add';\r\n        var cardId = null;\r\n        var cardType = this.state.formState.state;\r\n        var likeCount = 0;\r\n        if (this.state.editing.state === true) {\r\n            method = 'edit';\r\n            cardId = this.state.editing.cardId;\r\n            cardType = this.state.editing.cardType;\r\n            likeCount = this.state.editing.likes;\r\n            this.setState({ editing: { state: false } });\r\n        }\r\n\r\n        let newObj = {\r\n            method: method,\r\n            boardId: boardId,\r\n            cardType: cardType,\r\n            cardId: cardId,\r\n            cardBody: document.getElementById('newBody').value,\r\n            likes: likeCount\r\n        };\r\n\r\n        this.sendMessage(newObj);\r\n    }\r\n\r\n\tgetAutoRefreshStatus() {\r\n\t\tif (this.state.refreshCount <= 0) {\r\n\t\t\treturn <span className=\"page__refresh-status\">Auto-refresh: off</span>\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\trefreshTimer() {\r\n\t\tif (this.state.refreshCount <= 0) {\r\n            console.log('auto-refresh stopped');\r\n\t\t\tclearInterval(this.state.intervalId);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState((prevState) => ({\r\n\t\t\t\trefreshCount: prevState.refreshCount - 1\r\n\t\t\t}));\r\n\r\n\t\t\tthis.refreshData();\r\n\t\t}\r\n\t}\r\n\r\n    componentDidMount() {\r\n        this.refreshData();\r\n\t\tvar intervalId = setInterval(this.refreshTimer, settings.boardRefreshTime);\r\n\t\tthis.setState({\r\n\t\t\tintervalId: intervalId\r\n\t\t});\r\n\r\n        $('#wentWellModal').on('shown.bs.modal', function () {\r\n            $('#newBody').trigger('focus')\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var wentWellRows = [];\r\n        var wentBadlyRows = [];\r\n        var actionItemsRows = [];\r\n\r\n        for (var x = 0; x < this.state.cardData.length; x++) {\r\n            if (this.state.cardData[x].Cardtype === 'wentwell') {\r\n                wentWellRows.push(<Card key={x} data={this.state.cardData[x]} cardType='wentwell' delete={this.deleteCard} editItem={this.editItem} likeItem={this.likeItem} />);\r\n            }\r\n            else if (this.state.cardData[x].Cardtype === 'wentbadly') {\r\n                wentBadlyRows.push(<Card key={x} data={this.state.cardData[x]} cardType='wentwell' delete={this.deleteCard} editItem={this.editItem} likeItem={this.likeItem} />);\r\n            }\r\n            else if (this.state.cardData[x].Cardtype === 'actionitem') {\r\n                actionItemsRows.push(<Card key={x} data={this.state.cardData[x]} cardType='wentwell' delete={this.deleteCard} editItem={this.editItem} likeItem={this.likeItem} />);\r\n            }\r\n        }\r\n\r\n        var boardTitle = '';\r\n        if (this.state.boardData.length > 0) {\r\n            boardTitle = this.state.boardData[0].BoardTitle; //since it's a SELECT statement it comes back as an array\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row page__title\">\r\n                    <div className=\"col-9\">\r\n                        <div>\r\n                            <h2>{boardTitle}</h2>\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t\t\t{this.getAutoRefreshStatus()}\r\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary btn-refresh\" onClick={this.refreshData}>Refresh Board</button>\r\n\t\t\t\t\t</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-4 went-well\">\r\n                        <div className=\"column__title\">\r\n                            <h3>The Good</h3>\r\n                            <button className=\"reset-button-style add-btn\" onClick={this.addWentWell} data-toggle=\"modal\" data-target=\"#wentWellModal\" aria-label=\"Add new what went well card\"><span className=\"fa fa-plus-circle\"></span></button>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {wentWellRows}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 went-badly\">\r\n                        <div className=\"column__title\">\r\n                            <h3>The Bad</h3>\r\n                            <button className=\"reset-button-style add-btn\" onClick={this.addWentBadly} data-toggle=\"modal\" data-target=\"#wentWellModal\" aria-label=\"Add new what went badly card\"><span className=\"fa fa-plus-circle\"></span></button>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {wentBadlyRows}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 action-items\">\r\n                        <div className=\"column__title\">\r\n                            <h3>The Action Items</h3>\r\n                            <button className=\"reset-button-style add-btn\" onClick={this.addActionItem} data-toggle=\"modal\" data-target=\"#wentWellModal\" aria-label=\"Add new action item card\"><span className=\"fa fa-plus-circle\"></span></button>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {actionItemsRows}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"wentWellModal\" className=\"modal\" tabIndex=\"-1\" role=\"dialog\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">{this.state.formState.title}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"row\">\r\n                                    <label className=\"col-3\">Content</label>\r\n                                    <textarea cols=\"40\" rows=\"6\" id=\"newBody\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveChanges}>Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport trash from './images/delete.svg';\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\nclass ActiveBoard extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.deleteBoard = this.deleteBoard.bind(this);\r\n    }\r\n\r\n    deleteBoard() {\r\n        this.props.deleteBoard(this.props.boardData.BoardId);\r\n    }\r\n    formatDate() {\r\n        //HAHAHAHA Sqlite3 Current_timestamp is in GMT and dates in JS are stupid\r\n        // I could probably just include moment.js or something and make this cleaner\r\n        var temp = new Date(new Date(this.props.boardData.CreatedTime).toString() + ' UTC');\r\n        return temp.toLocaleString();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 col-sm-4 col-md-3\">\r\n                <div className=\"active-board\">\r\n                    <div className=\"active-board__body\">\r\n                            <div className=\"active-board__title\">\r\n                                <a href={this.props.openBoardUrl + this.props.boardData.BoardId}>\r\n                                    {this.props.boardData.BoardTitle}\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"active-board__delete-btn\">\r\n                                <img className=\"active-board__delete-icon\" src={trash} alt=\"delete\" aria-label={\"Delete board \" + this.props.boardData.BoardTitle} onClick={this.deleteBoard} />\r\n                            </div>\r\n\r\n                        <p className=\"board__date\"><span className=\"board__date-icon fa fa-calendar\"></span>{this.formatDate()}</p>\r\n\r\n                    </div>\r\n                    <div className=\"active-board__footer\">\r\n                        <a href={this.props.exportBoardUrl + '/' + this.props.boardData.BoardId} aria-label=\"Export Board\">\r\n                            <span class=\"fa fa-download active-board__export-btn\"></span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActiveBoard;\r\n","import React from 'react';\r\nimport settings from './settings';\r\nimport ActiveBoard from './ActiveBoard';\r\n\r\nclass NewBoard extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            boardUrl: '',\r\n            allBoards: []\r\n        };\r\n\r\n        this.deleteBoard = this.deleteBoard.bind(this);\r\n    }\r\n\r\n    deleteBoard(id) {\r\n        if (window.confirm('Delete this board?') === true) {\r\n            var self = this;\r\n\r\n            fetch(settings.routeDeleteBoard, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({ boardId: id })\r\n            }).then(response => response.json())\r\n            .then((data) => {\r\n                self.setState({\r\n                    allBoards: data\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    getLocalBoards() {\r\n        var self = this;\r\n        var temp = localStorage.getItem('BoardIds');\r\n        if (temp != null) {\r\n            var localIds = JSON.parse(temp);\r\n\r\n            fetch(settings.routeGetAllBoards, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(localIds)\r\n            }).then(response => response.json())\r\n            .then((data) => {\r\n                self.setState({\r\n                    allBoards: data\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    getActiveBoards() {\r\n        var self = this;\r\n\r\n        fetch(settings.routeGetAllBoards, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then((data) => {\r\n                self.setState({\r\n                    allBoards: data\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getActiveBoards();\r\n    }\r\n\r\n    render() {\r\n        var link = '';\r\n        if (this.state.boardUrl !== '') {\r\n            link = <a href={this.state.boardUrl}>Open new board</a>\r\n        }\r\n\r\n        var activeBoards = [];\r\n        for (var x = 0; x < this.state.allBoards.length; x++) {\r\n            activeBoards.push(<ActiveBoard key={x} boardData={this.state.allBoards[x]} openBoardUrl={'/?boardId='} deleteBoard={this.deleteBoard} exportBoardUrl={settings.routeExportBoard} />);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"page__title align-bottom\">\r\n                            <h2>Active Boards</h2>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {activeBoards}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewBoard;\r\n","import React, { Component } from 'react';\r\nimport 'jquery';\r\nimport 'popper.js';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport Board from './Board';\r\nimport NewBoard from './NewBoard';\r\nimport settings from './settings';\r\nimport logo from './images/retro-logo@2x.png';\r\nimport clientUtils from './client-utils';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.createBoard = this.createBoard.bind(this);\r\n  }\r\n\r\n  createBoard() {\r\n    var newTitle = document.getElementById('newBoardTitle').value;\r\n\r\n    if (newTitle == \"\") {\r\n      alert(\"Title is required.\");\r\n      return;\r\n    }\r\n\r\n    fetch(settings.routeCreateBoard, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({ boardTitle: newTitle })\r\n    }).then(response => response.json())\r\n    .then((data) => {\r\n      let boardUrl = '/?boardId=' + data.boardId;\r\n      window.location = boardUrl;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //set boardId from query string if it exists\r\n    let boardId = clientUtils.getURLParam(window.location, \"boardId\");\r\n    \r\n    var boardState = <NewBoard />;\r\n    if (boardId !== \"\") {\r\n      boardState = <Board />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App container-fluid\">\r\n        <header className=\"App-header\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 header__logo\">\r\n              <div className=\"header__logo--center\">\r\n                <a href=\"/\"><img className=\"header__logo-image\" src={logo} alt=\"logo\" /></a>\r\n              </div>\r\n            </div>\r\n          </div>        \r\n          <div className=\"row create-new-board\">\r\n              <div className=\"col-5\">\r\n                  <h2 className=\"new-board__title new-board__center\">Create New Board</h2>\r\n              </div>\r\n              <div className=\"col-5\">\r\n                  <input type=\"text\" className=\"form-control new-board__center\" id=\"newBoardTitle\" placeholder=\"Board title\" aria-label=\"Board title\" />\r\n              </div>\r\n              <div className=\"col-2\">\r\n                  <button className=\"btn btn-primary btn-create-board new-board__center\" onClick={this.createBoard} aria-label=\"Create board\">Create New Board</button>\r\n              </div>\r\n          </div>\r\n\r\n        </header>\r\n        <main className=\"main-content\">\r\n          {boardState}\r\n        </main>\r\n        <footer>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"footer\">\r\n                Copyright © 2019 IP Sprint 14.6 Hackathon. All Rights Reserved.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './polyfills';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/delete.bd895a50.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.163f0b79.svg\";","module.exports = __webpack_public_path__ + \"static/media/retro-logo@2x.b6436ee6.png\";"],"sourceRoot":""}